int helper(vector<int>& coins, int k, int n)
    {
        
       int t[n+1][k+1];
        for(int j=0;j<=k;j++)
            t[0][j]=INT_MAX-1;
        for(int i=1;i<=n;i++)
            t[i][0]=0;
       /* for(int j=1;j<=k;j++)
        {
            if(j%coins[0]==0)
                t[1][j]=j/coins[0];
            else
                t[1][j]=INT_MAX-1;
        }*/
        for(int i=1;i<=n;i++)
        {
            for(int j=1;j<=k;j++)
            {
                if(coins[i-1]<=j)
                {
                    t[i][j]=min(1+t[i][j-coins[i-1]],t[i-1][j]);
                }
                else
                   t[i][j]= t[i-1][j];
            }
        }
        if(t[n][k]>pow(10,9))
             return -1;
        return t[n][k];
       
        
    }
    int coinChange(vector<int>& coins, int amount) {
        
        int n=coins.size();
        return helper(coins,amount,n);
        
    }
